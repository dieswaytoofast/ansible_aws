---

- name: Get all the servers with tag {{ ansible_aws_server_type }}
  ec2_remote_facts:
    filters:
      "instance-state-name": running
      "tag:ansible_aws_server_type": "{{ ansible_aws_server_type }}"
    region: "{{ ansible_aws_region }}"
  register: gi_result

- name: Add these instances to group {{ ansible_aws_server_type }}
  add_host:
    hostname: "{{ item.private_ip_address }}"
    groupname: "{{ ansible_awss_server_type }}"
  with_items: "{{ gi_result.instances }}"

- debug: var=gi_result.instances

- name: Add these instances to group {{ ansible_aws_servers.all.name }}
  add_host:
    hostname: "{{ item.private_ip_address }}"
    groupname: "{{ ansible_aws_servers.all.name }}"
  with_items: "{{ gi_result.instances }}"

- debug: var=gi_result.instances

- name: Make sure that ssh is up for these servers
  wait_for:
    host: "{{ item.private_ip_address }}"
    port: 22
    delay: "{{ ansible_aws_instance_params.delay.existing_instance }}"
    timeout: "{{ ansible_aws_instance_params.timeout }}"
    state: started
  with_items: "{{ gi_result.instances }}"
  register: result

- debug: var=result

