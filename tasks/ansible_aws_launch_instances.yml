---

- name: Set the name of the instance to be launched
  set_fact:
    temp_server_name: "{{ ansible_aws_server_type }}-{{ ansible_aws_server_subtype_value }}"
  when: ansible_aws_server_name is not defined

- name: Set the name of the instance to be launched
  set_fact:
    temp_server_name: "{{ ansible_aws_server_name }}"
  when: ansible_aws_server_name is defined

# Now launch any remaining instances we care about
- name: Launch EC2 Intance(s) for {{ ansible_aws_server_type}}        # Set this
  ec2:
    region: "{{ ansible_aws_region }}"
    assign_public_ip: "{{ ansible_aws_assign_public_ip }}"
    count_tag:
      "ansible_aws_server_type": "{{ ansible_aws_server_type }}"         # Set this
      "ansible_aws_server_subtype": "{{ ansible_aws_server_subtype_value }}"
    exact_count: "{{ ansible_aws_instance_count }}"              # Set this
    group_id: "{{ ansible_aws_instance_params.security_group_id }}"
    image: "{{ ansible_aws_instance_params.ami_name }}"
    instance_profile_name: "{{ ansible_aws_instance_params.instance_profile }}"
    instance_tags:
      "Name": "{{ temp_server_name }}"
      "weave_group": "{{ weave.group_name }}"
      "ansible_aws_server_type": "{{ ansible_aws_server_type }}"
      "ansible_aws_server_subtype": "{{ ansible_aws_server_subtype_value }}"
    instance_type: "{{ ansible_aws_instance_type }}"            # Set this
    key_name: "{{ ansible_aws_instance_params.key_name }}"
    placement_group: "{{ ansible_aws_instance_params.placement_group }}"
    vpc_subnet_id: "{{ ansible_aws_instance_params.vpc_subnet_id }}"
    wait: yes
  register: li_result


- name: Add new instance to group {{ ansible_aws_server_type }}
  add_host:
    hostname: "{{ item.private_ip }}"
    groupname: "{{ ansible_aws_server_type }}"
  with_items: "{{ li_result.instances | default([]) }}"


- name: Add new instance to group all
  add_host:
    hostname: "{{ item.private_ip }}"
    groupname: all
  with_items: "{{ li_result.instances | default([]) }}"


- name: Add new instance to group new
  add_host:
    hostname: "{{ item.private_ip }}"
    groupname: new
  with_items: "{{ li_result.instances | default([]) }}"


- name: Wait for SSH to come up
  wait_for:
    host: "{{ item.private_ip }}"
    port: 22
    delay: "{{ ansible_aws_instance_params.delay.new_instance }}"
    timeout: "{{ ansible_aws_instance_params.timeout }}"
    state: started
  with_items: "{{ li_result.instances | default([]) }}"
  register: result

